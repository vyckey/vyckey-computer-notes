"use strict";(self.webpackChunkvyckey_computer_notes=self.webpackChunkvyckey_computer_notes||[]).push([[8516],{48922:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>t,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=s(74848),i=s(28453);const r={title:"Jackson Annotation",tags:["java","jackson","anotation"],sidebar_label:"Annotation Examples",sidebar_position:3},t="Jackson\u6ce8\u89e3\u4f7f\u7528\u6837\u4f8b",l={id:"library/jackson/annotation_examples",title:"Jackson Annotation",description:"[toc]",source:"@site/java/library/jackson/annotation_examples.md",sourceDirName:"library/jackson",slug:"/library/jackson/annotation_examples",permalink:"/java/library/jackson/annotation_examples",draft:!1,unlisted:!1,tags:[{label:"java",permalink:"/java/tags/java"},{label:"jackson",permalink:"/java/tags/jackson"},{label:"anotation",permalink:"/java/tags/anotation"}],version:"current",lastUpdatedBy:"vyckey",lastUpdatedAt:174745298e4,sidebarPosition:3,frontMatter:{title:"Jackson Annotation",tags:["java","jackson","anotation"],sidebar_label:"Annotation Examples",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"JSON/XML Utils",permalink:"/java/library/jackson/jackson_utils"},next:{title:"Advanced Features",permalink:"/java/library/jackson/jackson_advance"}},o={},c=[{value:"1.Jackson\u5e8f\u5217\u5316\u6ce8\u89e3",id:"1jackson\u5e8f\u5217\u5316\u6ce8\u89e3",level:2},{value:"1.1 @JsonGetter",id:"11-jsongetter",level:3},{value:"1.2 @JsonValue",id:"12-jsonvalue",level:3},{value:"1.3 @JsonPropertyOrder",id:"13-jsonpropertyorder",level:3},{value:"1.4 @JsonRootName",id:"14-jsonrootname",level:3},{value:"1.5 @JsonAnyGetter",id:"15-jsonanygetter",level:3},{value:"1.6 @JsonRawValue",id:"16-jsonrawvalue",level:3},{value:"1.7 @JsonSerialize",id:"17-jsonserialize",level:3},{value:"2.Jackson\u53cd\u5e8f\u5217\u5316\u6ce8\u89e3",id:"2jackson\u53cd\u5e8f\u5217\u5316\u6ce8\u89e3",level:2},{value:"2.1 @JsonCreator",id:"21-jsoncreator",level:3},{value:"2.2 @JsonAlias",id:"22-jsonalias",level:3},{value:"2.3 @JsonSetter",id:"23-jsonsetter",level:3},{value:"2.4 @JsonAnySetter",id:"24-jsonanysetter",level:3},{value:"2.5 @JsonAlias",id:"25-jsonalias",level:3},{value:"2.6 @JacksonInject",id:"26-jacksoninject",level:3},{value:"2.7 @JsonDeserialize",id:"27-jsondeserialize",level:3},{value:"3.Jackson\u5c5e\u6027\u6ce8\u89e3",id:"3jackson\u5c5e\u6027\u6ce8\u89e3",level:2},{value:"3.1 @JsonIgnore",id:"31-jsonignore",level:3},{value:"3.2 @JsonIgnoreProperties",id:"32-jsonignoreproperties",level:3},{value:"3.3 @JsonIgnoreType",id:"33-jsonignoretype",level:3},{value:"3.4 @JsonInclude",id:"34-jsoninclude",level:3},{value:"3.5 @JsonIncludeProperties",id:"35-jsonincludeproperties",level:3},{value:"3.6 @JsonAutoDetect",id:"36-jsonautodetect",level:3},{value:"4. Jackson\u591a\u6001\u7c7b\u578b\u5904\u7406\u6ce8\u89e3",id:"4-jackson\u591a\u6001\u7c7b\u578b\u5904\u7406\u6ce8\u89e3",level:2},{value:"5.Jackson\u4e00\u822c\u6ce8\u89e3",id:"5jackson\u4e00\u822c\u6ce8\u89e3",level:2},{value:"5.1 @JsonProperty",id:"51-jsonproperty",level:3},{value:"5.2 @JsonFormat",id:"52-jsonformat",level:3},{value:"5.3 @JsonUnwrapped",id:"53-jsonunwrapped",level:3},{value:"5.4 @JsonView",id:"54-jsonview",level:3},{value:"5.5 @JsonManagedReference\u548c@JsonBackReference",id:"55-jsonmanagedreference\u548cjsonbackreference",level:3},{value:"5.6 @JsonIdentityInfo",id:"56-jsonidentityinfo",level:3},{value:"5.7 @JsonFilter",id:"57-jsonfilter",level:3},{value:"6.\u81ea\u5b9a\u4e49Jackson\u6ce8\u89e3",id:"6\u81ea\u5b9a\u4e49jackson\u6ce8\u89e3",level:2},{value:"7.Jackson MixIn \u6ce8\u91ca",id:"7jackson-mixin-\u6ce8\u91ca",level:2},{value:"8.\u7981\u7528Jackson\u6ce8\u91ca",id:"8\u7981\u7528jackson\u6ce8\u91ca",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.p,{children:"[toc]"}),"\n",(0,a.jsx)(e.h1,{id:"jackson\u6ce8\u89e3\u4f7f\u7528\u6837\u4f8b",children:"Jackson\u6ce8\u89e3\u4f7f\u7528\u6837\u4f8b"}),"\n",(0,a.jsx)(e.h2,{id:"1jackson\u5e8f\u5217\u5316\u6ce8\u89e3",children:"1.Jackson\u5e8f\u5217\u5316\u6ce8\u89e3"}),"\n",(0,a.jsx)(e.h3,{id:"11-jsongetter",children:"1.1 @JsonGetter"}),"\n",(0,a.jsxs)(e.p,{children:["\u4f7f\u7528\u4f4d\u7f6e\uff1a",(0,a.jsx)(e.code,{children:"ANNOTATION_TYPE"}),"\u3001",(0,a.jsx)(e.code,{children:"METHOD"})]}),"\n",(0,a.jsxs)(e.p,{children:["\u5bf9\u4e8enon-static\u3001\u65e0\u53c2\u548cnon-void\u8fd4\u56de\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u6ce8\u89e3\u6765\u4f5c\u4e3a\u4e00\u4e2a\u903b\u8f91getter\u65b9\u6cd5\u3002\u66f4\u52a0\u901a\u7528\u7684\u6ce8\u89e3",(0,a.jsx)(e.code,{children:"@JsonProperty"}),"\u4e5f\u540c\u6837\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684\u529f\u80fd\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonGetter"})," \u6ce8\u89e3\u662f ",(0,a.jsx)(e.code,{children:"@JsonProperty"})," \u6ce8\u89e3\u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u5b83\u5c06\u65b9\u6cd5\u6807\u8bb0\u4e3a ",(0,a.jsx)(e.code,{children:"getter"})," \u65b9\u6cd5\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6307\u5b9a\u65b9\u6cd5 ",(0,a.jsx)(e.code,{children:"getTheName()"})," \u4f5c\u4e3a ",(0,a.jsx)(e.code,{children:"MyBean"})," \u5b9e\u4f53\u7684 ",(0,a.jsx)(e.code,{children:"name"})," \u5c5e\u6027\u7684 ",(0,a.jsx)(e.code,{children:"getter"})," \u65b9\u6cd5\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class MyBean {\n    public int id;\n    private String name;\n\n    @JsonGetter("myname")\n    public String getTheName() {\n        return name;\n    }\n}\n\n@Test\npublic void whenSerializingUsingJsonGetter_thenCorrect() throws JsonProcessingException {\n \n    MyBean bean = new MyBean(1, "My bean");\n\n    String result = new ObjectMapper().writeValueAsString(bean);\n \n    assertThat(result, containsString("My bean"));\n    assertThat(result, containsString("1"));\n}\n'})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "id": 1,\n    "myname":"My bean"\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"12-jsonvalue",children:"1.2 @JsonValue"}),"\n",(0,a.jsxs)(e.p,{children:["\u4f7f\u7528\u4f4d\u7f6e\uff1a",(0,a.jsx)(e.code,{children:"ANNOTATION_TYPE"}),"\u3001",(0,a.jsx)(e.code,{children:"METHOD"})]}),"\n",(0,a.jsxs)(e.p,{children:["\u8be5\u6ce8\u89e3\u7528\u4e8e\u6307\u5b9a\u5e8f\u5217\u5316\u8f93\u51fa\u7684\u503c\u7ed3\u679c\uff0c\u8981\u6c42\u662f\u65e0\u53c2\u548cnon-void\u8fd4\u56de\u7684\u65b9\u6cd5\u3002\u4e00\u4e2a\u7c7b\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u8fd9\u6837\u7684\u6ce8\u89e3\uff0c\u5426\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u4e00\u822c\u7ed3\u5408",(0,a.jsx)(e.code,{children:"@JsonCreator"}),"\u6ce8\u89e3\u4e00\u8d77\u4f7f\u7528\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"Example1:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Getter\n@AllArgsConstructor\nenum StatusEnum {\n    NOT_START("not_start"),\n    STARTED("started"),\n    PAUSE("pause"),\n    FINISHED("finished"),\n    ;\n    private final String code;\n\n    @JsonValue\n    public String getCode() {\n        return code;\n    }\n\n    @JsonCreator\n    public static StatusEnum of(String code) {\n        for (StatusEnum statusEnum : values()) {\n            if (statusEnum.getCode().equals(code)) {\n                return statusEnum;\n            }\n        }\n        return null;\n    }\n\n    public static void main(String[] args) {\n        String json = JsonUtils.toJson(StatusEnum.PAUSE);\n        System.out.println(json); // \u8f93\u51fa\uff1a"pause"\n        StatusEnum statusEnum = JsonUtils.fromJson(json, StatusEnum.class);\n        System.out.println(statusEnum); // \u8f93\u51fa\uff1aPAUSE\n    }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"Example2:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class MyBean {\n    private String name;\n\n    @JsonCreator\n    public MyBean(String name) {\n        this.name = name;\n    }\n\n    @JsonValue\n    public String getName() {\n        return name;\n    }\n\n    @Override\n    public String toString() {\n        return "MyBean{name=\'" + name + "\'}";\n    }\n\n    public static void main(String[] args) {\n        MyBean bean = new MyBean("William");\n        String json = JsonUtils.toJson(bean); // \u8f93\u51fa\uff1a"William"\n        System.out.println(JsonUtils.fromJson(json, MyBean.class)); // \u8f93\u51fa\uff1aMyBean{name=\'William\'}\n    }\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"13-jsonpropertyorder",children:"1.3 @JsonPropertyOrder"}),"\n",(0,a.jsxs)(e.p,{children:["\u4f7f\u7528\u4f4d\u7f6e\uff1a",(0,a.jsx)(e.code,{children:"ANNOTATION_TYPE"}),"\u3001",(0,a.jsx)(e.code,{children:"TYPE"}),"\u3001",(0,a.jsx)(e.code,{children:"METHOD"}),"\u3001",(0,a.jsx)(e.code,{children:"CONSTRUCTOR"}),"\u3001",(0,a.jsx)(e.code,{children:"FIELD"})]}),"\n",(0,a.jsxs)(e.p,{children:["\u8be5\u6ce8\u89e3\u7528\u4e8e\u663e\u5f0f\u6307\u5b9a\u5c5e\u6027\u7684\u5e8f\u5217\u5316\u987a\u5e8f\u3002\u8be5\u6ce8\u89e3\u5bf9\u53cd\u5e8f\u5217\u5316\u6ca1\u6709\u5f71\u54cd\u3002\u53ef\u4f7f\u7528",(0,a.jsx)(e.code,{children:"@JsonPropertyOrder(alphabetic=true)"}),"\u65b9\u4fbf\u5730\u6307\u5b9a\u8f93\u51fa\u6309\u5b57\u6bcd\u5e8f\u6392\u5e8f\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u5982\u4e0b\u6837\u4f8b\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'// ensure that "id" and "name" are output before other properties\n@JsonPropertyOrder(value = {"id", "name"})\n@Getter\npublic class MyBean {\n    private String name;\n    private Long id;\n\n    public static void main(String[] args) {\n        MyBean bean = new MyBean();\n        bean.id = 1023L;\n        bean.name = "Google";\n        String json = JsonUtils.toJson(bean);\n        System.out.println(json);\n    }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u8fd9\u662f\u5e8f\u5217\u5316\u7684\u8f93\u51fa\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "id": 1023,\n    "name": "Google"\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"14-jsonrootname",children:"1.4 @JsonRootName"}),"\n",(0,a.jsxs)(e.p,{children:["\u4f7f\u7528\u4f4d\u7f6e\uff1a",(0,a.jsx)(e.code,{children:"ANNOTATION_TYPE"}),"\u3001",(0,a.jsx)(e.code,{children:"TYPE"})]}),"\n",(0,a.jsxs)(e.p,{children:["\u8be5\u6ce8\u89e3\u7528\u4e8e\u6307\u793a\u6839\u5c42\u7ea7\u7684\u5305\u88c5\u540d\u5b57\u3002\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u53ea\u6709",(0,a.jsx)(e.code,{children:"@JsonRootName"}),"\u6ce8\u89e3\u4e0d\u4f1a\u751f\u6548\uff0c\u9700\u8981\u5f00\u542f",(0,a.jsx)(e.code,{children:"SerializationFeature.WRAP_ROOT_VALUE"}),"\u529f\u80fd\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"Example1:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'// namespace\u53ef\u9009\uff0c\u7528\u4e8eXML\u683c\u5f0f\u7684\u547d\u540d\u7a7a\u95f4\u6307\u5b9a\u3002\n@JsonRootName(value = "user", namespace = "xxx1.xxx2")\n@Getter\nclass MyBean {\n    private Long id;\n    private String name;\n\n    public static void main(String[] args) throws JsonProcessingException {\n        MyBean bean = new MyBean();\n        bean.id = 1023L;\n        bean.name = "Google";\n        ObjectMapper objectMapper = new ObjectMapper().enable(SerializationFeature.WRAP_ROOT_VALUE);\n        String json = objectMapper.writeValueAsString(bean);\n        System.out.println(json);\n    }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"Result1:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "user": {\n        "id": 1023,\n        "name": "Google"\n    }\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"15-jsonanygetter",children:"1.5 @JsonAnyGetter"}),"\n",(0,a.jsxs)(e.p,{children:["\u4f7f\u7528\u4f4d\u7f6e\uff1a",(0,a.jsx)(e.code,{children:"ANNOTATION_TYPE"}),"\u3001",(0,a.jsx)(e.code,{children:"TYPE"})]}),"\n",(0,a.jsxs)(e.p,{children:["\u8be5\u6ce8\u89e3\u7528\u4e8e\u50cf\u666e\u901a\u5c5e\u6027\u4e00\u6837\u5e8f\u5217\u5316\u4e3aMap\uff0c\u6ce8\u89e3\u5728non-static\u65e0\u53c2\u7684\u65b9\u6cd5\u6216\u8005\u6210\u5458\u5b57\u6bb5\uff0c\u65b9\u6cd5\u8fd4\u56de\u7c7b\u578b\u5fc5\u987b\u662fMap\u3002\u4e0e\u8be5\u6ce8\u89e3\u76f8\u53cd\u7684\u4e00\u4e2a\u64cd\u4f5c\u662f",(0,a.jsx)(e.code,{children:"@JsonAnySetter"}),"\u6ce8\u89e3\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonAnyGetter"})," \u6ce8\u91ca\u5141\u8bb8\u7075\u6d3b\u5730\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"Map"})," \u5b57\u6bb5\u4f5c\u4e3a\u6807\u51c6\u5c5e\u6027\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u4f8b\u5982\uff0c ",(0,a.jsx)(e.code,{children:"ExtendableBean"})," \u5b9e\u4f53\u5177\u6709name\u5c5e\u6027\u548c\u4e00\u7ec4\u952e/\u503c\u5bf9\u5f62\u5f0f\u7684\u53ef\u6269\u5c55\u5c5e\u6027\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Getter\n@ToString\npublic class MyBean {\n    private Long id;\n    private String name;\n    private Map<String, Object> properties = new HashMap<>();\n\n    @JsonAnySetter\n    public void setProperty(String key, Object value) {\n        properties.put(key, value);\n    }\n\n    @JsonAnyGetter\n    public Map<String, Object> getProperties() {\n        return properties;\n    }\n\n    public static void main(String[] args) {\n        MyBean bean = new MyBean();\n        bean.id = 1023L;\n        bean.name = "Alice";\n        bean.properties.put("age", 24);\n        bean.properties.put("from", "China");\n\n        String json = JsonUtils.toJson(bean);\n        System.out.println(json);\n        MyBean bean2 = JsonUtils.fromJson(json, MyBean.class);\n        System.out.println(bean2); // \u8f93\u51fa\uff1aMyBean(id=1023, name=Alice, properties={from=China, age=24})\n    }\n}\n'})}),"\n",(0,a.jsxs)(e.p,{children:["\u5f53\u6211\u4eec\u5e8f\u5217\u5316\u8be5\u5b9e\u4f53\u7684\u5b9e\u4f8b\u65f6\uff0c\u6211\u4eec\u5c06 ",(0,a.jsx)(e.code,{children:"Map"})," \u4e2d\u7684\u6240\u6709\u952e\u503c\u4f5c\u4e3a\u6807\u51c6\u7684\u666e\u901a\u5c5e\u6027\u83b7\u53d6\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "id": 1023,\n    "name": "Alice",\n    "from": "China",\n    "age": 24\n}\n'})}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528\u53ef\u9009\u53c2\u6570\u542f\u7528\u4e3a ",(0,a.jsx)(e.code,{children:"false"})," \u6765\u7981\u7528 ",(0,a.jsx)(e.code,{children:"@JsonAnyGetter"}),"\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c",(0,a.jsx)(e.code,{children:"Map"})," \u5c06\u8f6c\u6362\u4e3a JSON\uff0c\u5e76\u5728\u5e8f\u5217\u5316\u540e\u51fa\u73b0\u5728\u5c5e\u6027\u53d8\u91cf\u4e0b\u3002"]}),"\n",(0,a.jsx)(e.h3,{id:"16-jsonrawvalue",children:"1.6 @JsonRawValue"}),"\n",(0,a.jsxs)(e.p,{children:["\u4f7f\u7528\u4f4d\u7f6e\uff1a",(0,a.jsx)(e.code,{children:"ANNOTATION_TYPE"}),"\u3001",(0,a.jsx)(e.code,{children:"METHOD"}),"\u3001",(0,a.jsx)(e.code,{children:"TYPE"})]}),"\n",(0,a.jsx)(e.p,{children:"\u8be5\u6ce8\u89e3\u7528\u4e8e\u628a\u4e00\u4e2ajson\u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u65b9\u6cd5\u6216\u8005\u5b57\u6bb5\uff0c\u5e8f\u5217\u5316\u4e3ajson\u5b57\u7b26\u4e32\u672c\u8eab\u7684\u7ed3\u6784\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u5982\u4e0b\u6837\u4f8b\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Getter\npublic class MyBean {\n    private Long id;\n    private String name;\n    @JsonRawValue\n    private String json;\n\n    public static void main(String[] args) {\n        MyBean bean = new MyBean();\n        bean.id = 1023L;\n        bean.name = "Alice";\n        bean.json = "{\\"extra\\":{\\"key1\\": \\"val1\\", \\"key2\\":234}}";\n\n        String json = JsonUtils.toJson(bean);\n        System.out.println(json);\n    }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u5e8f\u5217\u5316\u8f93\u51fa\u662f\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "id": 1023,\n    "name": "Alice",\n    "json": {\n        "extra": {\n            "key1": "val1", \n            "key2": 234\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"17-jsonserialize",children:"1.7 @JsonSerialize"}),"\n",(0,a.jsx)(e.p,{children:"\u8be5\u6ce8\u89e3\u7528\u4e8e\u81ea\u5b9a\u4e49json\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u53ef\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002\u6211\u4eec\u5c06\u4f7f\u7528@JsonSerialize\u901a\u8fc7CustomDateSerializer\u5e8f\u5217\u5316eventDate\u5c5e\u6027\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class EventWithSerializer {\n    public String name;\n\n    @JsonSerialize(using = CustomDateSerializer.class)\n    public Date eventDate;\n}\n\nclass CustomDateSerializer extends StdSerializer<Date> {\n\n    private static SimpleDateFormat formatter \n      = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss");\n\n    public CustomDateSerializer() { \n        this(null); \n    } \n\n    public CustomDateSerializer(Class<Date> t) {\n        super(t); \n    }\n\n    @Override\n    public void serialize(\n      Date value, JsonGenerator gen, SerializerProvider arg2) \n      throws IOException, JsonProcessingException {\n        gen.writeString(formatter.format(value));\n    }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u73b0\u5728\u8ba9\u6211\u4eec\u5728\u6d4b\u8bd5\u4e2d\u4f7f\u7528\u5b83\u4eec\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Test\npublic void whenSerializingUsingJsonSerialize_thenCorrect() throws JsonProcessingException, ParseException {\n \n    SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss");\n\n    String toParse = "20-12-2014 02:30:00";\n    Date date = df.parse(toParse);\n    EventWithSerializer event = new EventWithSerializer("party", date);\n\n    String result = new ObjectMapper().writeValueAsString(event);\n    assertThat(result, containsString(toParse));\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"2jackson\u53cd\u5e8f\u5217\u5316\u6ce8\u89e3",children:"2.Jackson\u53cd\u5e8f\u5217\u5316\u6ce8\u89e3"}),"\n",(0,a.jsx)(e.h3,{id:"21-jsoncreator",children:"2.1 @JsonCreator"}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JsonCreator"})," \u6ce8\u89e3\u6765\u8c03\u6574\u53cd\u5e8f\u5217\u5316\u4e2d\u4f7f\u7528\u7684\u6784\u9020\u51fd\u6570/\u5de5\u5382\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u5f53\u6211\u4eec\u9700\u8981\u53cd\u5e8f\u5217\u5316\u4e00\u4e9b\u4e0e\u6211\u4eec\u9700\u8981\u83b7\u53d6\u7684\u76ee\u6807\u5b9e\u4f53\u4e0d\u5b8c\u5168\u5339\u914d\u7684 JSON \u65f6\uff0c\u5b83\u975e\u5e38\u6709\u7528\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002\u5047\u8bbe\u6211\u4eec\u9700\u8981\u53cd\u5e8f\u5217\u5316\u4ee5\u4e0b JSON\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "id":1,\n    "theName":"My bean"\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u4f46\u662f\uff0c\u6211\u4eec\u7684\u76ee\u6807\u5b9e\u4f53\u4e2d\u6ca1\u6709theName\u5b57\u6bb5\uff0c\u53ea\u6709\u4e00\u4e2aname\u5b57\u6bb5\u3002\u73b0\u5728\u6211\u4eec\u4e0d\u60f3\u66f4\u6539\u5b9e\u4f53\u672c\u8eab\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u4f7f\u7528@JsonCreator\u6ce8\u91ca\u6784\u9020\u51fd\u6570\u5e76\u4f7f\u7528@JsonProperty\u6ce8\u91ca\u6765\u5bf9\u89e3\u7ec4\u8fc7\u7a0b\u8fdb\u884c\u66f4\u591a\u63a7\u5236\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class BeanWithCreator {\n    public int id;\n    public String name;\n\n    @JsonCreator\n    public BeanWithCreator(\n      @JsonProperty("id") int id, \n      @JsonProperty("theName") String name) {\n        this.id = id;\n        this.name = name;\n    }\n}\n\n@Test\npublic void whenDeserializingUsingJsonCreator_thenCorrect() throws IOException {\n \n    String json = "{\\"id\\":1,\\"theName\\":\\"My bean\\"}";\n\n    BeanWithCreator bean = new ObjectMapper().readerFor(BeanWithCreator.class).readValue(json);\n    assertEquals("My bean", bean.name);\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"22-jsonalias",children:"2.2 @JsonAlias"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonAlias"})," \u5728\u53cd\u5e8f\u5217\u5316\u671f\u95f4\u4e3a\u5c5e\u6027\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2a\u66ff\u4ee3\u540d\u79f0\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u770b\u770b\u8fd9\u4e2a\u6ce8\u91ca\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class AliasBean {\n    @JsonAlias({ "fName", "f_name" })\n    private String firstName;   \n    private String lastName;\n}\n'})}),"\n",(0,a.jsxs)(e.p,{children:["\u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a POJO\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5305\u542b ",(0,a.jsx)(e.code,{children:"fName"}),"\u3001",(0,a.jsx)(e.code,{children:"f_name "}),"\u548c ",(0,a.jsx)(e.code,{children:"firstName"})," \u7b49\u503c\u7684 JSON \u53cd\u5e8f\u5217\u5316\u5230POJO\u7684 ",(0,a.jsx)(e.code,{children:"firstName"})," \u53d8\u91cf\u4e2d\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u4ee5\u4e0b\u662f\u786e\u4fdd\u6b64\u6ce8\u91ca\u6309\u9884\u671f\u5de5\u4f5c\u7684\u6d4b\u8bd5\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Test\npublic void whenDeserializingUsingJsonAlias_thenCorrect() throws IOException {\n    String json = "{\\"fName\\": \\"John\\", \\"lastName\\": \\"Green\\"}";\n    AliasBean aliasBean = new ObjectMapper().readerFor(AliasBean.class).readValue(json);\n    assertEquals("John", aliasBean.getFirstName());\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"23-jsonsetter",children:"2.3 @JsonSetter"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonSetter"})," \u662f ",(0,a.jsx)(e.code,{children:"@JsonProperty"})," \u7684\u66ff\u4ee3\u65b9\u6848\uff0c\u5b83\u5c06\u65b9\u6cd5\u6807\u8bb0\u4e3a ",(0,a.jsx)(e.code,{children:"setter"})," \u65b9\u6cd5\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u5f53\u6211\u4eec\u9700\u8981\u8bfb\u53d6\u4e00\u4e9b JSON \u6570\u636e\uff0c\u4f46\u76ee\u6807\u5b9e\u4f53\u7c7b\u4e0e\u8be5\u6570\u636e\u4e0d\u5b8c\u5168\u5339\u914d\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8c03\u6574\u6d41\u7a0b\u4ee5\u4f7f\u5176\u9002\u5408\u65f6\uff0c\u8fd9\u975e\u5e38\u6709\u7528\u3002"}),"\n",(0,a.jsxs)(e.p,{children:["\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5c06\u6307\u5b9a\u65b9\u6cd5 ",(0,a.jsx)(e.code,{children:"setTheName()"})," \u4f5c\u4e3a ",(0,a.jsx)(e.code,{children:"MyBean"})," \u5b9e\u4f53\u4e2d ",(0,a.jsx)(e.code,{children:"name"})," \u5c5e\u6027\u7684\u8bbe\u7f6e\u5668\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class MyBean {\n    public int id;\n    private String name;\n\n    @JsonSetter("name")\n    public void setTheName(String name) {\n        this.name = name;\n    }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u73b0\u5728\uff0c\u5f53\u6211\u4eec\u9700\u8981\u89e3\u7ec4\u4e00\u4e9b JSON \u6570\u636e\u65f6\uff0c\u8fd9\u975e\u5e38\u6709\u6548\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Test\npublic void whenDeserializingUsingJsonSetter_thenCorrect() throws IOException {\n \n    String json = "{\\"id\\":1,\\"name\\":\\"My bean\\"}";\n\n    MyBean bean = new ObjectMapper().readerFor(MyBean.class).readValue(json);\n    assertEquals("My bean", bean.getTheName());\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"24-jsonanysetter",children:"2.4 @JsonAnySetter"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonAnySetter"})," \u5141\u8bb8\u6211\u4eec\u7075\u6d3b\u5730\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"Map"})," \u4f5c\u4e3a\u6807\u51c6\u5c5e\u6027\u3002\u53cd\u5e8f\u5217\u5316\u65f6\uff0cJSON \u4e2d\u7684\u5c5e\u6027\u5c06\u7b80\u5355\u5730\u6dfb\u52a0\u5230\u6620\u5c04\u4e2d\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JsonAnySetter"})," \u53cd\u5e8f\u5217\u5316\u5b9e\u4f53 ",(0,a.jsx)(e.code,{children:"ExtendableBean"})," \uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "name":"My bean",\n    "attr2":"val2",\n    "attr1":"val1"\n}\n'})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class ExtendableBean {\n    public String name;\n    private Map<String, String> properties;\n\n    @JsonAnySetter\n    public void add(String key, String value) {\n        properties.put(key, value);\n    }\n}\n\n@Test\npublic void whenDeserializingUsingJsonAnySetter_thenCorrect() throws IOException {\n    String json = "{\\"name\\":\\"My bean\\",\\"attr2\\":\\"val2\\",\\"attr1\\":\\"val1\\"}";\n\n    ExtendableBean bean = new ObjectMapper().readerFor(ExtendableBean.class).readValue(json);\n    \n    assertEquals("My bean", bean.name);\n    assertEquals("val2", bean.getProperties().get("attr2"));\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"25-jsonalias",children:"2.5 @JsonAlias"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonAlias"})," \u5728\u53cd\u5e8f\u5217\u5316\u671f\u95f4\u4e3a\u5c5e\u6027\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2a\u66ff\u4ee3\u540d\u79f0\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u770b\u770b\u8fd9\u4e2a\u6ce8\u91ca\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class AliasBean {\n    @JsonAlias({ "fName", "f_name" })\n    private String firstName;   \n    private String lastName;\n}\n'})}),"\n",(0,a.jsxs)(e.p,{children:["\u8fd9\u91cc\u6211\u4eec\u6709\u4e00\u4e2a POJO\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u5305\u542b ",(0,a.jsx)(e.code,{children:"fName"})," \u3001 ",(0,a.jsx)(e.code,{children:"f_name"})," \u548c ",(0,a.jsx)(e.code,{children:"firstName"})," \u7b49\u503c\u7684 JSON \u53cd\u5e8f\u5217\u5316\u5230POJO\u7684 ",(0,a.jsx)(e.code,{children:"firstName"})," \u53d8\u91cf\u4e2d\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u4ee5\u4e0b\u662f\u786e\u4fdd\u6b64\u6ce8\u91ca\u6309\u9884\u671f\u5de5\u4f5c\u7684\u6d4b\u8bd5\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Test\npublic void whenDeserializingUsingJsonAlias_thenCorrect() throws IOException {\n    String json = "{\\"fName\\": \\"John\\", \\"lastName\\": \\"Green\\"}";\n    AliasBean aliasBean = new ObjectMapper().readerFor(AliasBean.class).readValue(json);\n    assertEquals("John", aliasBean.getFirstName());\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"26-jacksoninject",children:"2.6 @JacksonInject"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JacksonInject"})," \u6307\u793a\u5c5e\u6027\u5c06\u4ece\u6ce8\u5165\u800c\u4e0d\u662f\u4ece JSON \u6570\u636e\u83b7\u53d6\u5176\u503c\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JacksonInject"})," \u6765\u6ce8\u5165\u5c5e\u6027 ",(0,a.jsx)(e.code,{children:"id"})," \uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class BeanWithInject {\n    @JacksonInject\n    public int id;\n    \n    public String name;\n}\n\n@Test\npublic void whenDeserializingUsingJsonInject_thenCorrect() throws IOException {\n \n    String json = "{\\"name\\":\\"My bean\\"}";\n    \n    InjectableValues inject = new InjectableValues.Std().addValue(int.class, 1);\n    BeanWithInject bean = new ObjectMapper().reader(inject)\n      .forType(BeanWithInject.class)\n      .readValue(json);\n    \n    assertEquals("My bean", bean.name);\n    assertEquals(1, bean.id);\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"27-jsondeserialize",children:"2.7 @JsonDeserialize"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonDeserialize"})," \u8868\u793a\u4f7f\u7528\u81ea\u5b9a\u4e49\u53cd\u5e8f\u5217\u5316\u5668\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JsonDeserialize"})," \u901a\u8fc7 ",(0,a.jsx)(e.code,{children:"CustomDateDeserializer"})," \u53cd\u5e8f\u5217\u5316 ",(0,a.jsx)(e.code,{children:"eventDate"})," \u5c5e\u6027\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class EventWithSerializer {\n    public String name;\n\n    @JsonDeserialize(using = CustomDateDeserializer.class)\n    public Date eventDate;\n}\n\npublic class CustomDateDeserializer\n  extends StdDeserializer<Date> {\n\n    private static SimpleDateFormat formatter\n      = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss");\n\n    public CustomDateDeserializer() { \n        this(null); \n    } \n\n    public CustomDateDeserializer(Class<?> vc) { \n        super(vc); \n    }\n\n    @Override\n    public Date deserialize(\n      JsonParser jsonparser, DeserializationContext context) \n      throws IOException {\n        \n        String date = jsonparser.getText();\n        try {\n            return formatter.parse(date);\n        } catch (ParseException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n\n@Test\npublic void whenDeserializingUsingJsonDeserialize_thenCorrect() throws IOException {\n \n    String json = "{"name":"party","eventDate":"20-12-2014 02:30:00"}";\n\n    SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss");\n    EventWithSerializer event = new ObjectMapper().readerFor(EventWithSerializer.class).readValue(json);\n    \n    assertEquals("20-12-2014 02:30:00", df.format(event.eventDate));\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"3jackson\u5c5e\u6027\u6ce8\u89e3",children:"3.Jackson\u5c5e\u6027\u6ce8\u89e3"}),"\n",(0,a.jsx)(e.h3,{id:"31-jsonignore",children:"3.1 @JsonIgnore"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonIgnore"})," \u6ce8\u89e3\u7528\u4e8e\u6807\u8bb0\u8981\u5728\u5b57\u6bb5\u7ea7\u522b\u5ffd\u7565\u7684\u5c5e\u6027\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u8ba9\u6211\u4eec\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JsonIgnore"})," \u6765\u5ffd\u7565\u5e8f\u5217\u5316\u4e2d\u7684\u5c5e\u6027 ",(0,a.jsx)(e.code,{children:"id"})," \uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class BeanWithIgnore {\n    @JsonIgnore\n    public int id;\n\n    public String name;\n}\n\n@Test\npublic void whenSerializingUsingJsonIgnore_thenCorrect() throws JsonProcessingException {\n    BeanWithIgnore bean = new BeanWithIgnore(1, "My bean");\n\n    String result = new ObjectMapper().writeValueAsString(bean);\n    \n    assertThat(result, containsString("My bean"));\n    assertThat(result, not(containsString("id")));\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"32-jsonignoreproperties",children:"3.2 @JsonIgnoreProperties"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonIgnoreProperties"})," \u662f\u4e00\u4e2a\u7c7b\u7ea7\u6ce8\u91ca\uff0c\u6807\u8bb0 Jackson \u5c06\u5ffd\u7565\u7684\u5c5e\u6027\u6216\u5c5e\u6027\u5217\u8868\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u5ffd\u7565\u5e8f\u5217\u5316\u5c5e\u6027 ",(0,a.jsx)(e.code,{children:"id"})," \u7684\u7b80\u5355\u793a\u4f8b\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@JsonIgnoreProperties({ "id" })\npublic class BeanWithIgnore {\n    public int id;\n    public String name;\n}\n\n@Test\npublic void whenSerializingUsingJsonIgnoreProperties_thenCorrect() throws JsonProcessingException {\n    BeanWithIgnore bean = new BeanWithIgnore(1, "My bean");\n\n    String result = new ObjectMapper().writeValueAsString(bean);\n    \n    assertThat(result, containsString("My bean"));\n    assertThat(result, not(containsString("id")));\n}\n'})}),"\n",(0,a.jsxs)(e.p,{children:["\u8981\u65e0\u4e00\u4f8b\u5916\u5730\u5ffd\u7565 JSON \u8f93\u5165\u4e2d\u7684\u4efb\u4f55\u672a\u77e5\u5c5e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e ",(0,a.jsx)(e.code,{children:"@JsonIgnoreProperties"})," \u6ce8\u91ca\u7684 ",(0,a.jsx)(e.code,{children:"ignoreUnknown=true"})," \u3002"]}),"\n",(0,a.jsx)(e.h3,{id:"33-jsonignoretype",children:"3.3 @JsonIgnoreType"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonIgnoreType"})," \u6807\u8bb0\u8981\u5ffd\u7565\u7684\u5e26\u6ce8\u91ca\u7c7b\u578b\u7684\u6240\u6709\u5c5e\u6027\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u6ce8\u91ca\u6765\u6807\u8bb0\u6240\u6709 ",(0,a.jsx)(e.code,{children:"Name"})," \u7c7b\u578b\u7684\u5c5e\u6027\u88ab\u5ffd\u7565\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class User {\n    public int id;\n    public Name name;\n\n    @JsonIgnoreType\n    public static class Name {\n        public String firstName;\n        public String lastName;\n    }\n}\n\n@Test\npublic void whenSerializingUsingJsonIgnoreType_thenCorrect() throws JsonProcessingException, ParseException {\n    User.Name name = new User.Name("John", "Doe");\n    User user = new User(1, name);\n\n    String result = new ObjectMapper().writeValueAsString(user);\n\n    assertThat(result, containsString("1"));\n    assertThat(result, not(containsString("name")));\n    assertThat(result, not(containsString("John")));\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a MixIn \u7684\u65b9\u5f0f\u6765\u5bf9\u67d0\u4e2a\u7c7b\u578b\u8fdb\u884c\u5ffd\u7565\u3002"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:"@JsonIgnoreType\npublic class MyMixInForIgnoreType {}\n\nmapper.addMixInAnnotations(String[].class, MyMixInForIgnoreType.class);\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u5982\u4e0b\u662f\u4f7f\u7528\u793a\u4f8b\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class MyDtoWithSpecialField {\n    private String[] stringValue;\n    private int intValue;\n    private boolean booleanValue;\n}\n\n@Test\npublic final void givenFieldTypeIsIgnored_whenDtoIsSerialized_thenCorrect() throws JsonParseException, IOException {\n    ObjectMapper mapper = new ObjectMapper();\n    mapper.addMixIn(String[].class, MyMixInForIgnoreType.class);\n    MyDtoWithSpecialField dtoObject = new MyDtoWithSpecialField();\n    dtoObject.setBooleanValue(true);\n\n    String dtoAsString = mapper.writeValueAsString(dtoObject);\n\n    assertThat(dtoAsString, containsString("intValue"));\n    assertThat(dtoAsString, containsString("booleanValue"));\n    assertThat(dtoAsString, not(containsString("stringValue")));\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"34-jsoninclude",children:"3.4 @JsonInclude"}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JsonInclude"})," \u6765\u6392\u9664\u5177\u6709\u7a7a/\u7a7a/\u9ed8\u8ba4\u503c\u7684\u5c5e\u6027\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u4ece\u5e8f\u5217\u5316\u4e2d\u6392\u9664\u7a7a\u503c\u7684\u793a\u4f8b\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@JsonInclude(Include.NON_NULL)\npublic class MyBean {\n    public int id;\n    public String name;\n    // @JsonInclude(Include.NON_NULL)\n    public String description;\n}\n\npublic void whenSerializingUsingJsonInclude_thenCorrect() throws JsonProcessingException {\n    MyBean bean = new MyBean(1, null);\n\n    String result = new ObjectMapper().writeValueAsString(bean);\n    \n    assertThat(result, containsString("1"));\n    assertThat(result, not(containsString("name")));\n}\n'})}),"\n",(0,a.jsxs)(e.p,{children:["\u4f60\u4e5f\u53ef\u4ee5\u7528\u8fc7 ",(0,a.jsx)(e.code,{children:"objectMapper.setSerializationInclusion(Include.NON_NULL);"})," \u6765\u5168\u5c40\u5730\u63a7\u5236\u4e0d\u5e8f\u5217\u5316\u7a7a\u5b57\u6bb5\u3002"]}),"\n",(0,a.jsx)(e.h3,{id:"35-jsonincludeproperties",children:"3.5 @JsonIncludeProperties"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonIncludeProperties"})," \u662f\u6700\u53d7\u6b22\u8fce\u7684 Jackson \u529f\u80fd\u4e4b\u4e00\u3002\u5b83\u662f\u5728 Jackson 2.12 \u4e2d\u5f15\u5165\u7684\uff0c\u53ef\u7528\u4e8e\u6807\u8bb0 Jackson \u5c06\u5728\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u671f\u95f4\u5305\u542b\u7684\u5c5e\u6027\u6216\u5c5e\u6027\u5217\u8868\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u5305\u62ec\u5e8f\u5217\u5316\u4e2d\u7684\u5c5e\u6027\u540d\u79f0\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@JsonIncludeProperties({ "name" })\npublic class BeanWithInclude {\n    public int id;\n    public String name;\n}\n\n@Test\npublic void whenSerializingUsingJsonIncludeProperties_thenCorrect() throws JsonProcessingException {\n    final BeanWithInclude bean = new BeanWithInclude(1, "My bean");\n    final String result = new ObjectMapper().writeValueAsString(bean);\n    assertThat(result, containsString("My bean"));\n    assertThat(result, not(containsString("id")));\n    assertThat(result, containsString("name"));\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"36-jsonautodetect",children:"3.6 @JsonAutoDetect"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonAutoDetect"})," \u53ef\u4ee5\u8986\u76d6\u54ea\u4e9b\u5c5e\u6027\u53ef\u89c1\u3001\u54ea\u4e9b\u5c5e\u6027\u4e0d\u53ef\u89c1\u7684\u9ed8\u8ba4\u8bed\u4e49\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u9996\u5148\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\u6765\u4e86\u89e3\u6ce8\u91ca\u5982\u4f55\u53d1\u6325\u5f88\u5927\u4f5c\u7528\uff1b\u8ba9\u6211\u4eec\u542f\u7528\u79c1\u6709\u5c5e\u6027\u7684\u5e8f\u5217\u5316\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@JsonAutoDetect(fieldVisibility = Visibility.ANY)\npublic class PrivateBean {\n    private int id;\n    private String name;\n}\n\n@Test\npublic void whenSerializingUsingJsonAutoDetect_thenCorrect() throws JsonProcessingException {\n    PrivateBean bean = new PrivateBean(1, "My bean");\n\n    String result = new ObjectMapper().writeValueAsString(bean);\n    \n    assertThat(result, containsString("1"));\n    assertThat(result, containsString("My bean"));\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"4-jackson\u591a\u6001\u7c7b\u578b\u5904\u7406\u6ce8\u89e3",children:"4. Jackson\u591a\u6001\u7c7b\u578b\u5904\u7406\u6ce8\u89e3"}),"\n",(0,a.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u4e00\u4e0bJackson\u591a\u6001\u7c7b\u578b\u5904\u7406\u6ce8\u89e3\uff1a"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"@JsonTypeInfo"})," \u2013 \u6307\u793a\u5e8f\u5217\u5316\u4e2d\u5305\u542b\u7684\u7c7b\u578b\u4fe1\u606f\u7684\u8be6\u7ec6\u4fe1\u606f"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"@JsonSubTypes"})," \u2013 \u8868\u793a\u6ce8\u91ca\u7c7b\u578b\u7684\u5b50\u7c7b\u578b"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"@JsonTypeName"})," \u2013 \u5b9a\u4e49\u7528\u4e8e\u5e26\u6ce8\u91ca\u7684\u7c7b\u7684\u903b\u8f91\u7c7b\u578b\u540d\u79f0"]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["\u8ba9\u6211\u4eec\u68c0\u67e5\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u793a\u4f8b\uff0c\u5e76\u4f7f\u7528\u6240\u6709\u4e09\u4e2a ",(0,a.jsx)(e.code,{children:"@JsonTypeInfo"})," \u3001 ",(0,a.jsx)(e.code,{children:"@JsonSubTypes"})," \u548c ",(0,a.jsx)(e.code,{children:"@JsonTypeName"})," \u6765\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u5b9e\u4f53 ",(0,a.jsx)(e.code,{children:"Zoo"})," \uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class Zoo {\n    public Animal animal;\n\n    @JsonTypeInfo(\n      use = JsonTypeInfo.Id.NAME, \n      include = As.PROPERTY, \n      property = "type")\n    @JsonSubTypes({\n        @JsonSubTypes.Type(value = Dog.class, name = "dog"),\n        @JsonSubTypes.Type(value = Cat.class, name = "cat")\n    })\n    public static class Animal {\n        public String name;\n    }\n\n    @JsonTypeName("dog")\n    public static class Dog extends Animal {\n        public double barkVolume;\n    }\n\n    @JsonTypeName("cat")\n    public static class Cat extends Animal {\n        boolean likesCream;\n        public int lives;\n    }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u5f53\u6211\u4eec\u8fdb\u884c\u5e8f\u5217\u5316\u65f6\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Test\npublic void whenSerializingPolymorphic_thenCorrect() throws JsonProcessingException {\n    Zoo.Dog dog = new Zoo.Dog("lacy");\n    Zoo zoo = new Zoo(dog);\n\n    String result = new ObjectMapper().writeValueAsString(zoo);\n\n    assertThat(result, containsString("type"));\n    assertThat(result, containsString("dog"));\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u4ee5\u4e0b\u662f\u4f7f\u7528Dog\u5e8f\u5217\u5316Zoo\u5b9e\u4f8b\u5c06\u5bfc\u81f4\u7684\u7ed3\u679c\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "animal": {\n        "type": "dog",\n        "name": "lacy",\n        "barkVolume": 0\n    }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u73b0\u5728\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u3002\u8ba9\u6211\u4eec\u4ece\u4ee5\u4e0b JSON \u8f93\u5165\u5f00\u59cb\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "animal":{\n        "name":"lacy",\n        "type":"cat"\n    }\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u7136\u540e\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u5c06\u5176\u89e3\u7ec4\u5230Zoo\u5b9e\u4f8b\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Test\npublic void whenDeserializingPolymorphic_thenCorrect() throws IOException {\n    String json = "{\\"animal\\":{\\"name\\":\\"lacy\\",\\"type\\":\\"cat\\"}}";\n\n    Zoo zoo = new ObjectMapper().readerFor(Zoo.class).readValue(json);\n\n    assertEquals("lacy", zoo.animal.name);\n    assertEquals(Zoo.Cat.class, zoo.animal.getClass());\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"5jackson\u4e00\u822c\u6ce8\u89e3",children:"5.Jackson\u4e00\u822c\u6ce8\u89e3"}),"\n",(0,a.jsx)(e.h3,{id:"51-jsonproperty",children:"5.1 @JsonProperty"}),"\n",(0,a.jsxs)(e.p,{children:["\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0 ",(0,a.jsx)(e.code,{children:"@JsonProperty"})," \u6ce8\u89e3\u6765\u6307\u793a JSON \u4e2d\u7684\u5c5e\u6027\u540d\u79f0\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u5f53\u6211\u4eec\u5904\u7406\u975e\u6807\u51c6\u7684 ",(0,a.jsx)(e.code,{children:"getter"})," \u548c ",(0,a.jsx)(e.code,{children:"setter"})," \u65f6\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JsonProperty"})," \u6765\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u5c5e\u6027\u540d\u79f0\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class MyBean {\n    public int id;\n    private String name;\n\n    @JsonProperty("name")\n    public void setTheName(String name) {\n        this.name = name;\n    }\n\n    @JsonProperty("name")\n    public String getTheName() {\n        return name;\n    }\n}\n\n@Test\npublic void whenUsingJsonProperty_thenCorrect() throws IOException {\n    MyBean bean = new MyBean(1, "My bean");\n\n    String result = new ObjectMapper().writeValueAsString(bean);\n    \n    assertThat(result, containsString("My bean"));\n    assertThat(result, containsString("1"));\n\n    MyBean resultBean = new ObjectMapper()\n      .readerFor(MyBean.class)\n      .readValue(result);\n    assertEquals("My bean", resultBean.getTheName());\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"52-jsonformat",children:"5.2 @JsonFormat"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonFormat"})," \u6ce8\u89e3\u53ef\u4ee5\u6307\u5b9a\u5e8f\u5217\u5316\u65e5\u671f/\u65f6\u95f4\u503c\u65f6\u7684\u683c\u5f0f\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JsonFormat"})," \u6765\u63a7\u5236\u5c5e\u6027 ",(0,a.jsx)(e.code,{children:"eventDate"})," \u7684\u683c\u5f0f\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class EventWithFormat {\n    public String name;\n\n    @JsonFormat(\n      shape = JsonFormat.Shape.STRING,\n      pattern = "dd-MM-yyyy hh:mm:ss")\n    public Date eventDate;\n}\n\n@Test\npublic void whenSerializingUsingJsonFormat_thenCorrect() throws JsonProcessingException, ParseException {\n    SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss");\n    df.setTimeZone(TimeZone.getTimeZone("UTC"));\n\n    String toParse = "20-12-2014 02:30:00";\n    Date date = df.parse(toParse);\n    EventWithFormat event = new EventWithFormat("party", date);\n    \n    String result = new ObjectMapper().writeValueAsString(event);\n    \n    assertThat(result, containsString(toParse));\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"53-jsonunwrapped",children:"5.3 @JsonUnwrapped"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonUnwrapped"})," \u5b9a\u4e49\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u65f6\u5e94\u5c55\u5f00/\u5c55\u5e73\u7684\u503c\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u8ba9\u6211\u4eec\u770b\u770b\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1b\u6211\u4eec\u5c06\u4f7f\u7528\u6ce8\u91ca\u6765\u89e3\u5f00\u5c5e\u6027\u540d\u79f0\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class UnwrappedUser {\n    public int id;\n\n    @JsonUnwrapped\n    public Name name;\n\n    public static class Name {\n        public String firstName;\n        public String lastName;\n    }\n}\n@Test\npublic void whenSerializingUsingJsonUnwrapped_thenCorrect() throws JsonProcessingException, ParseException {\n    UnwrappedUser.Name name = new UnwrappedUser.Name("John", "Doe");\n    UnwrappedUser user = new UnwrappedUser(1, name);\n\n    String result = new ObjectMapper().writeValueAsString(user);\n    \n    assertThat(result, containsString("John"));\n    assertThat(result, not(containsString("name")));\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u6700\u540e\uff0c\u8f93\u51fa\u5982\u4e0b\u6240\u793a - \u9759\u6001\u5d4c\u5957\u7c7b\u7684\u5b57\u6bb5\u4e0e\u5176\u4ed6\u5b57\u6bb5\u4e00\u8d77\u5c55\u5f00\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "id":1,\n    "firstName":"John",\n    "lastName":"Doe"\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"54-jsonview",children:"5.4 @JsonView"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonView"})," \u6307\u793a\u5c06\u5305\u542b\u8be5\u5c5e\u6027\u4ee5\u8fdb\u884c\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u7684\u89c6\u56fe\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u4f8b\u5982\uff0c\u6211\u4eec\u5c06\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JsonView"})," \u6765\u5e8f\u5217\u5316 ",(0,a.jsx)(e.code,{children:"Item"})," \u5b9e\u4f53\u7684\u5b9e\u4f8b\u3002"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class Views {\n    public static class Public {}\n    public static class Internal extends Public {}\n}\npublic class Item {\n    @JsonView(Views.Public.class)\n    public int id;\n\n    @JsonView(Views.Public.class)\n    public String itemName;\n\n    @JsonView(Views.Internal.class)\n    public String ownerName;\n}\n\n@Test\npublic void whenSerializingUsingJsonView_thenCorrect() throws JsonProcessingException {\n    Item item = new Item(2, "book", "John");\n\n    String result = new ObjectMapper().writerWithView(Views.Public.class).writeValueAsString(item);\n\n    assertThat(result, containsString("book"));\n    assertThat(result, containsString("2"));\n    assertThat(result, not(containsString("John")));\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"55-jsonmanagedreference\u548cjsonbackreference",children:"5.5 @JsonManagedReference\u548c@JsonBackReference"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonManagedReference"})," \u548c ",(0,a.jsx)(e.code,{children:"@JsonBackReference"})," \u6ce8\u91ca\u53ef\u4ee5\u5904\u7406\u7236/\u5b50\u5173\u7cfb\u5e76\u89e3\u51b3\u5faa\u73af\u95ee\u9898\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JsonManagedReference"})," \u548c ",(0,a.jsx)(e.code,{children:"@JsonBackReference"})," \u6765\u5e8f\u5217\u5316\u6211\u4eec\u7684 ",(0,a.jsx)(e.code,{children:"ItemWithRef"})," \u5b9e\u4f53\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'public class ItemWithRef {\n    public int id;\n    public String itemName;\n\n    @JsonManagedReference\n    public UserWithRef owner;\n}\npublic class UserWithRef {\n    public int id;\n    public String name;\n\n    @JsonBackReference\n    public List<ItemWithRef> userItems;\n}\n@Test\npublic void whenSerializingUsingJacksonReferenceAnnotation_thenCorrect() throws JsonProcessingException {\n    UserWithRef user = new UserWithRef(1, "John");\n    ItemWithRef item = new ItemWithRef(2, "book", user);\n    user.addItem(item);\n\n    String result = new ObjectMapper().writeValueAsString(item);\n\n    assertThat(result, containsString("book"));\n    assertThat(result, containsString("John"));\n    assertThat(result, not(containsString("userItems")));\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"56-jsonidentityinfo",children:"5.6 @JsonIdentityInfo"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonIdentityInfo"})," \u6307\u793a\u5728\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u503c\u65f6\u5e94\u4f7f\u7528\u5bf9\u8c61\u6807\u8bc6\uff0c\u4f8b\u5982\u5728\u5904\u7406\u65e0\u9650\u9012\u5f52\u7c7b\u578b\u7684\u95ee\u9898\u65f6\u3002"]}),"\n",(0,a.jsxs)(e.p,{children:["\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6709\u4e00\u4e2a\u4e0e ",(0,a.jsx)(e.code,{children:"UserWithIdentity"})," \u5b9e\u4f53\u5177\u6709\u53cc\u5411\u5173\u7cfb\u7684 ",(0,a.jsx)(e.code,{children:"ItemWithIdentity"})," \u5b9e\u4f53\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@JsonIdentityInfo(\n  generator = ObjectIdGenerators.PropertyGenerator.class,\n  property = "id")\npublic class ItemWithIdentity {\n    public int id;\n    public String itemName;\n    public UserWithIdentity owner;\n}\n@JsonIdentityInfo(\n  generator = ObjectIdGenerators.PropertyGenerator.class,\n  property = "id")\npublic class UserWithIdentity {\n    public int id;\n    public String name;\n    public List<ItemWithIdentity> userItems;\n}\n\n@Test\npublic void whenSerializingUsingJsonIdentityInfo_thenCorrect() throws JsonProcessingException {\n    UserWithIdentity user = new UserWithIdentity(1, "John");\n    ItemWithIdentity item = new ItemWithIdentity(2, "book", user);\n    user.addItem(item);\n\n    String result = new ObjectMapper().writeValueAsString(item);\n\n    assertThat(result, containsString("book"));\n    assertThat(result, containsString("John"));\n    assertThat(result, containsString("userItems"));\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u4ee5\u4e0b\u662f\u5e8f\u5217\u5316\u9879\u76ee\u548c\u7528\u6237\u7684\u5b8c\u6574\u8f93\u51fa\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "id": 2,\n    "itemName": "book",\n    "owner": {\n        "id": 1,\n        "name": "John",\n        "userItems": [\n            2\n        ]\n    }\n}\n'})}),"\n",(0,a.jsx)(e.h3,{id:"57-jsonfilter",children:"5.7 @JsonFilter"}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"@JsonFilter"})," \u6ce8\u89e3\u6307\u5b9a\u5e8f\u5217\u5316\u671f\u95f4\u8981\u4f7f\u7528\u7684\u8fc7\u6ee4\u5668\u3002"]}),"\n",(0,a.jsx)(e.p,{children:"\u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u5b9e\u4f53\u5e76\u6307\u5411\u8fc7\u6ee4\u5668\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@JsonFilter("myFilter")\npublic class BeanWithFilter {\n    public int id;\n    public String name;\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u73b0\u5728\uff0c\u5728\u5b8c\u6574\u6d4b\u8bd5\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u8fc7\u6ee4\u5668\uff0c\u8be5\u8fc7\u6ee4\u5668\u4ece\u5e8f\u5217\u5316\u4e2d\u6392\u9664\u9664name\u4e4b\u5916\u7684\u6240\u6709\u5176\u4ed6\u5c5e\u6027\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Test\npublic void whenSerializingUsingJsonFilter_thenCorrect() throws JsonProcessingException {\n    BeanWithFilter bean = new BeanWithFilter(1, "My bean");\n\n    FilterProvider filters = new SimpleFilterProvider().addFilter("myFilter", \n        SimpleBeanPropertyFilter.filterOutAllExcept("name"));\n\n    String result = new ObjectMapper().writer(filters).writeValueAsString(bean);\n\n    assertThat(result, containsString("My bean"));\n    assertThat(result, not(containsString("id")));\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"6\u81ea\u5b9a\u4e49jackson\u6ce8\u89e3",children:"6.\u81ea\u5b9a\u4e49Jackson\u6ce8\u89e3"}),"\n",(0,a.jsxs)(e.p,{children:["\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u521b\u5efa\u81ea\u5b9a\u4e49 Jackson \u6ce8\u91ca\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,a.jsx)(e.code,{children:"@JacksonAnnotationsInside"})," \u6ce8\u89e3\uff1a"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Retention(RetentionPolicy.RUNTIME)\n@JacksonAnnotationsInside\n@JsonInclude(Include.NON_NULL)\n@JsonPropertyOrder({ "name", "id", "dateCreated" })\npublic @interface CustomAnnotation {}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u73b0\u5728\uff0c\u5982\u679c\u6211\u4eec\u5728\u5b9e\u4f53\u4e0a\u4f7f\u7528\u65b0\u6ce8\u91ca\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:"@CustomAnnotation\npublic class BeanWithCustomAnnotation {\n    public int id;\n    public String name;\n    public Date dateCreated;\n}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b83\u5982\u4f55\u5c06\u73b0\u6709\u6ce8\u91ca\u7ec4\u5408\u6210\u4e00\u4e2a\u7b80\u5355\u7684\u81ea\u5b9a\u4e49\u6ce8\u91ca\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u7b80\u5199\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Test\npublic void whenSerializingUsingCustomAnnotation_thenCorrect() throws JsonProcessingException {\n    BeanWithCustomAnnotation bean = new BeanWithCustomAnnotation(1, "My bean", null);\n\n    String result = new ObjectMapper().writeValueAsString(bean);\n\n    assertThat(result, containsString("My bean"));\n    assertThat(result, containsString("1"));\n    assertThat(result, not(containsString("dateCreated")));\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u5e8f\u5217\u5316\u8fc7\u7a0b\u7684\u8f93\u51fa\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "name":"My bean",\n    "id":1\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"7jackson-mixin-\u6ce8\u91ca",children:"7.Jackson MixIn \u6ce8\u91ca"}),"\n",(0,a.jsx)(e.p,{children:"\u63a5\u4e0b\u6765\u6211\u4eec\u770b\u770b\u5982\u4f55\u4f7f\u7528 Jackson MixIn \u6ce8\u91ca\u3002"}),"\n",(0,a.jsx)(e.p,{children:"\u4f8b\u5982\uff0c\u8ba9\u6211\u4eec\u4f7f\u7528 MixIn \u6ce8\u91ca\u6765\u5ffd\u7565User\u7c7b\u578b\u7684\u5c5e\u6027\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:"public class Item {\n    public int id;\n    public String itemName;\n    public User owner;\n}\n@JsonIgnoreType\npublic class MyMixInForIgnoreType {}\n"})}),"\n",(0,a.jsx)(e.p,{children:"\u7136\u540e\u8ba9\u6211\u4eec\u770b\u770b\u5b9e\u9645\u6548\u679c\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Test\npublic void whenSerializingUsingMixInAnnotation_thenCorrect() throws JsonProcessingException {\n    Item item = new Item(1, "book", null);\n\n    String result = new ObjectMapper().writeValueAsString(item);\n    assertThat(result, containsString("owner"));\n\n    ObjectMapper mapper = new ObjectMapper();\n    mapper.addMixIn(User.class, MyMixInForIgnoreType.class);\n\n    result = mapper.writeValueAsString(item);\n    assertThat(result, not(containsString("owner")));\n}\n'})}),"\n",(0,a.jsx)(e.h2,{id:"8\u7981\u7528jackson\u6ce8\u91ca",children:"8.\u7981\u7528Jackson\u6ce8\u91ca"}),"\n",(0,a.jsx)(e.p,{children:"\u6700\u540e\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5982\u4f55\u7981\u7528\u6240\u6709 Jackson \u6ce8\u91ca\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7981\u7528MapperFeature \u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002USE_ANNOTATIONS \u5982\u4e0b\u4f8b\u6240\u793a\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@JsonInclude(Include.NON_NULL)\n@JsonPropertyOrder({ "name", "id" })\npublic class MyBean {\n    public int id;\n    public String name;\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u73b0\u5728\uff0c\u7981\u7528\u6ce8\u91ca\u540e\uff0c\u8fd9\u4e9b\u5e94\u8be5\u4e0d\u8d77\u4f5c\u7528\uff0c\u5e76\u4e14\u5e94\u8be5\u5e94\u7528\u5e93\u7684\u9ed8\u8ba4\u503c\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-java",children:'@Test\npublic void whenDisablingAllAnnotations_thenAllDisabled() throws IOException {\n    MyBean bean = new MyBean(1, null);\n\n    ObjectMapper mapper = new ObjectMapper();\n    mapper.disable(MapperFeature.USE_ANNOTATIONS);\n    String result = mapper.writeValueAsString(bean);\n    \n    assertThat(result, containsString("1"));\n    assertThat(result, containsString("name"));\n}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u7981\u7528\u6ce8\u89e3\u4e4b\u524d\u5e8f\u5217\u5316\u7684\u7ed3\u679c\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{"id":1}\n'})}),"\n",(0,a.jsx)(e.p,{children:"\u7981\u7528\u6ce8\u89e3\u540e\u5e8f\u5217\u5316\u7684\u7ed3\u679c\uff1a"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-json",children:'{\n    "id":1,\n    "name":null\n}\n'})}),"\n",(0,a.jsx)(e.h1,{id:"\u53c2\u8003\u8d44\u6599",children:"\u53c2\u8003\u8d44\u6599"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://www.baeldung.com/jackson-annotations#bd-jackson-serialization-annotations",children:"Jackson Annotation Examples"})}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},28453:(n,e,s)=>{s.d(e,{R:()=>t,x:()=>l});var a=s(96540);const i={},r=a.createContext(i);function t(n){const e=a.useContext(r);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),a.createElement(r.Provider,{value:e},n.children)}}}]);