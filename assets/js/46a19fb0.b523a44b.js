"use strict";(self.webpackChunkvyckey_computer_notes=self.webpackChunkvyckey_computer_notes||[]).push([[4488],{78710:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=o(74848),i=o(28453);const s={title:"Mockito",tags:["test","mockito"],sidebar_label:"Mockito",sidebar_position:1},c="Mockito",r={id:"framework/testing/mockito/index",title:"Mockito",description:"\u57fa\u672c\u6982\u5ff5",source:"@site/java/framework/testing/mockito/index.md",sourceDirName:"framework/testing/mockito",slug:"/framework/testing/mockito/",permalink:"/java/framework/testing/mockito/",draft:!1,unlisted:!1,tags:[{label:"test",permalink:"/java/tags/test"},{label:"mockito",permalink:"/java/tags/mockito"}],version:"current",lastUpdatedBy:"vyckey",lastUpdatedAt:174745298e4,sidebarPosition:1,frontMatter:{title:"Mockito",tags:["test","mockito"],sidebar_label:"Mockito",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"JUnit",permalink:"/java/framework/testing/junit/"},next:{title:"Library",permalink:"/java/library/"}},a={},d=[{value:"\u57fa\u672c\u6982\u5ff5",id:"\u57fa\u672c\u6982\u5ff5",level:2},{value:"Stubbing",id:"stubbing",level:2},{value:"Stubing \u65b9\u6cd5\u8fd4\u56de\u7ed3\u679c",id:"stubing-\u65b9\u6cd5\u8fd4\u56de\u7ed3\u679c",level:3},{value:"Stubbing \u8fde\u7eed\u8c03\u7528\uff08\u8fed\u4ee3\u98ce\u683c\uff09",id:"stubbing-\u8fde\u7eed\u8c03\u7528\u8fed\u4ee3\u98ce\u683c",level:3},{value:"\u81ea\u5b9a\u4e49\u56de\u8c03\u8fd4\u56de\u503c",id:"\u81ea\u5b9a\u4e49\u56de\u8c03\u8fd4\u56de\u503c",level:3},{value:"void \u65b9\u6cd5\u7684\u7279\u6b8a\u5904\u7406\u65b9\u5f0f",id:"void-\u65b9\u6cd5\u7684\u7279\u6b8a\u5904\u7406\u65b9\u5f0f",level:3},{value:"\u81ea\u5b9a\u4e49\u672a Stubbing \u65b9\u6cd5\u7684\u9ed8\u8ba4\u8fd4\u56de\u503c",id:"\u81ea\u5b9a\u4e49\u672a-stubbing-\u65b9\u6cd5\u7684\u9ed8\u8ba4\u8fd4\u56de\u503c",level:3},{value:"Mocking",id:"mocking",level:2},{value:"\u9a8c\u8bc1\u65b9\u6cd5\u8c03\u7528",id:"\u9a8c\u8bc1\u65b9\u6cd5\u8c03\u7528",level:3},{value:"\u53c2\u6570\u5339\u914d",id:"\u53c2\u6570\u5339\u914d",level:3},{value:"\u53c2\u6570\u6355\u83b7",id:"\u53c2\u6570\u6355\u83b7",level:3},{value:"\u8c03\u7528\u6b21\u6570\u9a8c\u8bc1",id:"\u8c03\u7528\u6b21\u6570\u9a8c\u8bc1",level:3},{value:"\u8c03\u7528\u987a\u5e8f\u7684\u9a8c\u8bc1",id:"\u8c03\u7528\u987a\u5e8f\u7684\u9a8c\u8bc1",level:3},{value:"\u8d85\u65f6\u9a8c\u8bc1",id:"\u8d85\u65f6\u9a8c\u8bc1",level:3},{value:"\u9759\u6001\u65b9\u6cd5\u7684 Mocking",id:"\u9759\u6001\u65b9\u6cd5\u7684-mocking",level:3},{value:"\u5bf9\u8c61\u6784\u9020\u7684 Mocking",id:"\u5bf9\u8c61\u6784\u9020\u7684-mocking",level:3},{value:"Spying",id:"spying",level:2},{value:"Spying \u771f\u5b9e\u5bf9\u8c61",id:"spying-\u771f\u5b9e\u5bf9\u8c61",level:3},{value:"\u9ad8\u7ea7\u7528\u6cd5",id:"\u9ad8\u7ea7\u7528\u6cd5",level:2},{value:"\u6ce8\u89e3\u7b80\u5316",id:"\u6ce8\u89e3\u7b80\u5316",level:3}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"mockito",children:"Mockito"}),"\n",(0,t.jsx)(n.h2,{id:"\u57fa\u672c\u6982\u5ff5",children:"\u57fa\u672c\u6982\u5ff5"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Mocking is the act of describing (mandatory) interactions between the object under specification and its collaborators."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Mocking"})})," \u662f\u63cf\u8ff0\u5728\u89c4\u8303\u4e0b\u7684\u5bf9\u8c61\u548c\u5176\u5408\u4f5c\u8005\u4e4b\u95f4\u7684\uff08\u5f3a\u5236\uff09\u4ea4\u4e92\u884c\u4e3a\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u6a21\u62df\u7684\u4e00\u4e2a\u865a\u62df\u7c7b\uff0c\u53ef\u4ee5\u6a21\u62df\u65b9\u6cd5\u8c03\u7528\u7684\u7ed3\u679c\u8fd4\u56de\uff0c\u4ee5\u53ca\u65b9\u6cd5\u7684\u884c\u4e3a\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u4e8e\u672a\u6a21\u62df\u7684\u65b9\u6cd5\u8fd4\u56de\u503c\u4f1a\u4ee5\u9ed8\u8ba4\u503c\u7684\u65b9\u5f0f\u5904\u7406\uff0c\u6570\u503c\u57fa\u672c\u7c7b\u578b\u8fd4\u56de ",(0,t.jsx)(n.code,{children:"0"})," \uff0c\u5e03\u5c14\u7c7b\u578b\u8fd4\u56de ",(0,t.jsx)(n.code,{children:"false"})," \uff0c\u5f15\u7528\u7c7b\u578b\u8fd4\u56de ",(0,t.jsx)(n.code,{children:"null"})," \u3002"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Stubbing is the act of making collaborators respond to method calls in a certain way. When stubbing a method, you don\u2019t care if and how many times the method is going to be called; you just want it to return some value, or perform some side effect, whenever it gets called."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Stubbing"})})," \u662f\u8ba9\u534f\u4f5c\u8005\u4ee5\u67d0\u79cd\u65b9\u5f0f\u54cd\u5e94\u65b9\u6cd5\u8c03\u7528\u7684\u884c\u4e3a\u3002\u63d2\u6869\u65b9\u6cd5\u65f6\uff0c\u60a8\u4e0d\u5173\u5fc3\u8be5\u65b9\u6cd5\u662f\u5426\u4f1a\u88ab\u8c03\u7528\u4ee5\u53ca\u8c03\u7528\u591a\u5c11\u6b21\uff1b\u60a8\u53ea\u5e0c\u671b\u5b83\u5728\u88ab\u8c03\u7528\u65f6\u8fd4\u56de\u4e00\u4e9b\u503c\u6216\u6267\u884c\u4e00\u4e9b\u526f\u4f5c\u7528\u3002\u7b80\u5355\u6765\u8bf4\uff0c",(0,t.jsx)(n.code,{children:"Stubbing"})," \u4e5f\u662f\u4e00\u4e2a\u6a21\u62df\u7684\u865a\u62df\u7c7b\uff0c\u53ea\u8fd4\u56de\u6a21\u62df\u7684\u7ed3\u679c\uff0c\u5e76\u4e0d\u63d0\u4f9b\u4ea4\u4e92\u9a8c\u8bc1\uff08\u65b9\u6cd5\u662f\u5426\u4f1a\u88ab\u8c03\u7528\u4ee5\u53ca\u8c03\u7528\u591a\u5c11\u6b21\uff09\uff0c\u4f7f\u7528\u63d2\u6869\u53ea\u80fd\u9a8c\u8bc1\u72b6\u6001\uff08\u4f8b\u5982\u6d4b\u8bd5\u65b9\u6cd5\u8fd4\u56de\u7684\u7ed3\u679c\u6570\u636e\u662f\u5426\u6b63\u786e\uff0clist\u5927\u5c0f\u7b49\uff0c\u662f\u5426\u7b26\u5408\u65ad\u8a00\uff09\u3002\u603b\u4e4b\uff0c",(0,t.jsx)(n.code,{children:"Stubbing"})," \u6bd4 ",(0,t.jsx)(n.code,{children:"Mocking"})," \u7b80\u5355\u4e00\u4e9b\uff0c\u53ea\u9a8c\u8bc1\u8fd4\u56de\u7ed3\u679c\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"Stubbing"})," \u8db3\u77e3\u3002"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"A spy is always based on a real object. Hence you must provide a class type rather than an interface type, along with any constructor arguments for the type. If no constructor arguments are provided, the type\u2019s no-arg constructor will be used. Method calls on a spy are automatically delegated to the real object. Likewise, values returned from the real object\u2019s methods are passed back to the caller via the spy."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Spy"})})," \u603b\u662f\u57fa\u4e8e\u771f\u5b9e\u7684\u5bf9\u8c61\u3002 \u56e0\u6b64\uff0c\u60a8\u5fc5\u987b\u63d0\u4f9b\u7c7b\u7c7b\u578b\u800c\u4e0d\u662f\u63a5\u53e3\u7c7b\u578b\uff0c\u4ee5\u53ca\u8be5\u7c7b\u578b\u7684\u4efb\u4f55\u6784\u9020\u51fd\u6570\u53c2\u6570\u3002\u5982\u679c\u672a\u63d0\u4f9b\u6784\u9020\u51fd\u6570\u53c2\u6570\uff0c\u5219\u5c06\u4f7f\u7528\u8be5\u7c7b\u578b\u7684\u65e0\u53c2\u6570\u6784\u9020\u51fd\u6570\u3002\u5bf9\u95f4\u8c0d\u7684\u65b9\u6cd5\u8c03\u7528\u4f1a\u81ea\u52a8\u59d4\u6258\u7ed9\u771f\u5b9e\u5bf9\u8c61\u3002\u540c\u6837\uff0c\u4ece\u771f\u5b9e\u5bf9\u8c61\u7684\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u901a\u8fc7\u95f4\u8c0d\u4f20\u9012\u56de\u8c03\u7528\u8005\u3002\u533a\u522b\u4e8e ",(0,t.jsx)(n.code,{children:"Mocking"})," \u548c ",(0,t.jsx)(n.code,{children:"Stubbing"})," \uff0c",(0,t.jsx)(n.code,{children:"Spy"})," \u4f1a\u8c03\u7528\u771f\u662f\u7684\u5bf9\u8c61\uff0c\u53ea\u662f\u5bf9\u90e8\u5206\u65b9\u6cd5\u8fdb\u884c\u6a21\u62df\u3002"]}),"\n",(0,t.jsx)(n.h2,{id:"stubbing",children:"Stubbing"}),"\n",(0,t.jsx)(n.h3,{id:"stubing-\u65b9\u6cd5\u8fd4\u56de\u7ed3\u679c",children:"Stubing \u65b9\u6cd5\u8fd4\u56de\u7ed3\u679c"}),"\n",(0,t.jsxs)(n.p,{children:["\u4e0b\u9762\u7684\u4ee3\u7406\u793a\u4f8bmock\u4e86\u4e00\u4e2a ",(0,t.jsx)(n.code,{children:"LinkedList"})," \u7c7b\u5bf9\u8c61\u7684 ",(0,t.jsx)(n.code,{children:"get"})," \u65b9\u6cd5\uff0c\u5bf9\u4e8e\u672amock\u7684\u65b9\u6cd5\u53c2\u6570\uff0c\u5c06\u91c7\u7528\u9ed8\u8ba4\u503c\u4f5c\u4e3a\u7ed3\u679c\uff0c\u4e5f\u5c31\u662f\u6570\u503c\u57fa\u672c\u7c7b\u578b\u8fd4\u56de ",(0,t.jsx)(n.code,{children:"0"})," \uff0c\u5e03\u5c14\u7c7b\u578b\u8fd4\u56de ",(0,t.jsx)(n.code,{children:"false"})," \uff0c\u5f15\u7528\u7c7b\u578b\u8fd4\u56de ",(0,t.jsx)(n.code,{children:"null"})," \u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//You can mock concrete classes, not just interfaces\nLinkedList mockedList = mock(LinkedList.class);\n\n//stubbing\nwhen(mockedList.get(0)).thenReturn("first");\nwhen(mockedList.get(1)).thenThrow(new RuntimeException());\n\n//following prints "first"\nSystem.out.println(mockedList.get(0));\n\n//following throws runtime exception\nSystem.out.println(mockedList.get(1));\n\n//following prints "null" because get(999) was not stubbed\nSystem.out.println(mockedList.get(999));\n\n//Although it is possible to verify a stubbed invocation, usually it\'s just redundant\n//If your code cares what get(0) returns, then something else breaks (often even before verify() gets executed).\n//If your code doesn\'t care what get(0) returns, then it should not be stubbed.\nverify(mockedList).get(0);\n'})}),"\n",(0,t.jsxs)(n.p,{children:["\u5bf9\u4e8e ",(0,t.jsx)(n.code,{children:"void"})," \u8fd4\u56de\u7c7b\u578b\u7684\u53c2\u6570\u53efmock\u5f02\u5e38\u7684\u629b\u51fa\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"doThrow(new RuntimeException()).when(mockedList).clear();\n\n//following throws RuntimeException:\nmockedList.clear();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"stubbing-\u8fde\u7eed\u8c03\u7528\u8fed\u4ee3\u98ce\u683c",children:"Stubbing \u8fde\u7eed\u8c03\u7528\uff08\u8fed\u4ee3\u98ce\u683c\uff09"}),"\n",(0,t.jsx)(n.p,{children:"\u9488\u5bf9\u4e00\u4e9b\u8fed\u4ee3\u65b9\u6cd5\uff0cMockito \u652f\u6301\u5982\u4e0b\u7684\u63d2\u6869\u65b9\u5f0f\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'when(mock.someMethod("some arg"))\n    .thenThrow(new RuntimeException())\n    .thenReturn("foo");\n\n//First call: throws runtime exception:\nmock.someMethod("some arg");\n\n//Second call: prints "foo"\nSystem.out.println(mock.someMethod("some arg"));\n\n//Any consecutive call: prints "foo" as well (last stubbing wins).\nSystem.out.println(mock.someMethod("some arg"));\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'when(mock.someMethod("some arg"))\n    .thenReturn("one", "two", "three");\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//All mock.someMethod("some arg") calls will return "two"\nwhen(mock.someMethod("some arg"))\n    .thenReturn("one")\nwhen(mock.someMethod("some arg"))\n    .thenReturn("two")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\u81ea\u5b9a\u4e49\u56de\u8c03\u8fd4\u56de\u503c",children:"\u81ea\u5b9a\u4e49\u56de\u8c03\u8fd4\u56de\u503c"}),"\n",(0,t.jsxs)(n.p,{children:["\u5b9e\u73b0 ",(0,t.jsx)(n.a,{href:"https://javadoc.io/static/org.mockito/mockito-core/5.3.1/org/mockito/stubbing/Answer.html",children:(0,t.jsx)(n.code,{children:"Answer"})})," \u63a5\u53e3\u53ef\u4ee5\u5b9e\u73b0 Stubbing \u56de\u8c03\u529f\u80fd\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u66f4\u63a8\u8350\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"thenReturn()"})," \u6216 ",(0,t.jsx)(n.code,{children:"thenThrow()"})," \u65b9\u6cd5\uff0c\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\u548c\u7b80\u5355\u3002\u5982\u679c\u4f60\u6709\u4f7f\u7528\u6cdb\u5316\u56de\u8c03\u7684\u573a\u666f\uff0c\u53ef\u4ee5\u4f7f\u7528\u8be5\u65b9\u5f0f\u8fdb\u884c\u63d2\u6869\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'when(mock.someMethod(anyString())).thenAnswer(\n    new Answer() {\n        public Object answer(InvocationOnMock invocation) {\n            Object[] args = invocation.getArguments();\n            Object mock = invocation.getMock();\n            return "called with arguments: " + Arrays.toString(args);\n        }\n    });\n\n//Following prints "called with arguments: [foo]"\nSystem.out.println(mock.someMethod("foo"));\n'})}),"\n",(0,t.jsx)(n.h3,{id:"void-\u65b9\u6cd5\u7684\u7279\u6b8a\u5904\u7406\u65b9\u5f0f",children:"void \u65b9\u6cd5\u7684\u7279\u6b8a\u5904\u7406\u65b9\u5f0f"}),"\n",(0,t.jsxs)(n.p,{children:["\u5bf9\u4e8e ",(0,t.jsx)(n.code,{children:"void"})," \u8fd4\u56de\u7c7b\u578b\u7684\u65b9\u6cd5\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"doReturn()"})," \u3001 ",(0,t.jsx)(n.code,{children:"doThrow()"})," \u3001 ",(0,t.jsx)(n.code,{children:"doAnswer()"})," \u3001 ",(0,t.jsx)(n.code,{children:"doNothing()"})," \u3001 ",(0,t.jsx)(n.code,{children:"doCallRealMethod()"})," \u7b49\u65b9\u6cd5\u6765\u8fdb\u884c\u63d2\u6869\u3002\u5982\u4e0b\u793a\u4f8b\uff1a"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"doThrow(new RuntimeException()).when(mockedList).clear();\n\n//following throws RuntimeException:\nmockedList.clear();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u81ea\u5b9a\u4e49\u672a-stubbing-\u65b9\u6cd5\u7684\u9ed8\u8ba4\u8fd4\u56de\u503c",children:"\u81ea\u5b9a\u4e49\u672a Stubbing \u65b9\u6cd5\u7684\u9ed8\u8ba4\u8fd4\u56de\u503c"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"Foo mock = mock(Foo.class, Mockito.RETURNS_SMART_NULLS);\nFoo mockTwo = mock(Foo.class, new YourOwnAnswer());\n"})}),"\n",(0,t.jsx)(n.h2,{id:"mocking",children:"Mocking"}),"\n",(0,t.jsx)(n.h3,{id:"\u9a8c\u8bc1\u65b9\u6cd5\u8c03\u7528",children:"\u9a8c\u8bc1\u65b9\u6cd5\u8c03\u7528"}),"\n",(0,t.jsxs)(n.p,{children:["\u4e0b\u9762\u7684\u4ee3\u7801\u793a\u4f8bmock\u4e86\u4e00\u4e2a ",(0,t.jsx)(n.code,{children:"List"})," \u4f5c\u4e3a\u793a\u4f8b\uff0c\u5b9e\u9645\u4f8b\u5b50\u66ff\u6362\u4e3a\u7528\u6237\u5f85mock\u7684\u7c7b\u3002\u4e0b\u9762\u7684\u51fd\u6570\u8c03\u7528\u4f1a\u88abmock\u5bf9\u8c61\u7ed9\u8bb0\u4f4f\uff0c\u53ef\u4ee5\u7528\u6765\u9a8c\u8bc1\u65b9\u6cd5\u662f\u5426\u88ab\u8c03\u7528\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//Let\'s import Mockito statically so that the code looks clearer\nimport static org.mockito.Mockito.*;\n\n//mock creation\nList mockedList = mock(List.class);\n\n//using mock object\nmockedList.add("one");\nmockedList.clear();\n\n//verification\nverify(mockedList).add("one");\nverify(mockedList).clear();\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\u53c2\u6570\u5339\u914d",children:"\u53c2\u6570\u5339\u914d"}),"\n",(0,t.jsxs)(n.p,{children:["Mockito \u4f7f\u7528\u5bf9\u8c61\u7684\u65b9\u6cd5 ",(0,t.jsx)(n.code,{children:"equals"})," \u6765\u5224\u65ad\u53c2\u6570\u662f\u5426\u5339\u914d\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4e00\u4e9b\u989d\u5916\u7684\u53c2\u6570\u5339\u914d\u5339\u914d\u65b9\u5f0f\u63d0\u4f9b\u3002\u5b98\u65b9\u63d0\u4f9b\u4e86\u5185\u5efa\u7684 ",(0,t.jsx)(n.a,{href:"https://javadoc.io/static/org.mockito/mockito-core/5.3.1/org/mockito/ArgumentMatchers.html",children:"ArgumentMatchers"})," \u548c ",(0,t.jsx)(n.a,{href:"https://javadoc.io/static/org.mockito/mockito-core/5.3.1/org/mockito/hamcrest/MockitoHamcrest.html",children:"MockitoHamcrest"})," \u5b9e\u73b0\u53ef\u4f9b\u4f7f\u7528\uff0c\u5982\u679c\u60f3\u81ea\u5b9a\u4e49\u53c2\u6570\u5339\u914d\uff0c\u53ef\u5b9e\u73b0 ",(0,t.jsx)(n.a,{href:"https://javadoc.io/static/org.mockito/mockito-core/5.3.1/org/mockito/ArgumentMatcher.html",children:"ArgumentMatcher"})," \u63a5\u53e3\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u51fa\u4e8e\u5408\u7406\u6027\uff0c\u66f4\u5efa\u8bae\u91cd\u5199 ",(0,t.jsx)(n.code,{children:"equals"})," \u65b9\u6cd5\u4ee5\u5b9e\u73b0\u81ea\u7136\u5730\u53c2\u6570\u5339\u914d\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//stubbing using built-in anyInt() argument matcher\nwhen(mockedList.get(anyInt())).thenReturn("element");\n\n//stubbing using custom matcher (let\'s say isValid() returns your own matcher implementation):\nwhen(mockedList.contains(argThat(isValid()))).thenReturn(true);\n\n//following prints "element"\nSystem.out.println(mockedList.get(999));\n\n//you can also verify using an argument matcher\nverify(mockedList).get(anyInt());\n\n//argument matchers can also be written as Java 8 Lambdas\nverify(mockedList).add(argThat(someString -> someString.length() > 5));\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\u53c2\u6570\u6355\u83b7",children:"\u53c2\u6570\u6355\u83b7"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ArgumentCaptor"})," \u9002\u7528\u4e8e\u81ea\u5b9a\u4e49\u53c2\u6570\u5339\u914d\u4e0d\u592a\u53ef\u80fd\u91cd\u590d\u4f7f\u7528\uff0c\u4f60\u9700\u8981\u65ad\u8a00\u53c2\u6570\u503c\u505a\u5b8c\u6574\u7684\u9a8c\u8bc1\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'ArgumentCaptor<Person> argument = ArgumentCaptor.forClass(Person.class);\nverify(mock).doSomething(argument.capture());\nassertEquals("John", argument.getValue().getName()); \n'})}),"\n",(0,t.jsx)(n.h3,{id:"\u8c03\u7528\u6b21\u6570\u9a8c\u8bc1",children:"\u8c03\u7528\u6b21\u6570\u9a8c\u8bc1"}),"\n",(0,t.jsx)(n.p,{children:"Mockito \u63d0\u4f9bmock\u65b9\u6cd5\u7684\u53c2\u6570\u8c03\u7528\u6b21\u6570\u9a8c\u8bc1\uff0c\u5305\u542b\u81f3\u5c11\u3001\u81f3\u591a\u6b21\u6570\u6216\u4ece\u672a\u8c03\u7528\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//using mock\nmockedList.add("once");\n\nmockedList.add("twice");\nmockedList.add("twice");\n\nmockedList.add("three times");\nmockedList.add("three times");\nmockedList.add("three times");\n\n//following two verifications work exactly the same - times(1) is used by default\nverify(mockedList).add("once");\nverify(mockedList, times(1)).add("once");\n\n//exact number of invocations verification\nverify(mockedList, times(2)).add("twice");\nverify(mockedList, times(3)).add("three times");\n\n//verification using never(). never() is an alias to times(0)\nverify(mockedList, never()).add("never happened");\n\n//verification using atLeast()/atMost()\nverify(mockedList, atMostOnce()).add("once");\nverify(mockedList, atLeastOnce()).add("three times");\nverify(mockedList, atLeast(2)).add("three times");\nverify(mockedList, atMost(5)).add("three times");\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\u8c03\u7528\u987a\u5e8f\u7684\u9a8c\u8bc1",children:"\u8c03\u7528\u987a\u5e8f\u7684\u9a8c\u8bc1"}),"\n",(0,t.jsx)(n.p,{children:"Mockito \u53ef\u63d0\u4f9b\u65b9\u6cd5\u8c03\u7528\u987a\u5e8f\u7684\u9a8c\u8bc1\u529f\u80fd\uff0c\u5982\u4e0b\u793a\u4f8b\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'// A. Single mock whose methods must be invoked in a particular order\nList singleMock = mock(List.class);\n\n//using a single mock\nsingleMock.add("was added first");\nsingleMock.add("was added second");\n\n//create an inOrder verifier for a single mock\nInOrder inOrder = inOrder(singleMock);\n\n//following will make sure that add is first called with "was added first", then with "was added second"\ninOrder.verify(singleMock).add("was added first");\ninOrder.verify(singleMock).add("was added second");\n\n // B. Multiple mocks that must be used in a particular order\nList firstMock = mock(List.class);\nList secondMock = mock(List.class);\n\n//using mocks\nfirstMock.add("was called first");\nsecondMock.add("was called second");\n\n//create inOrder object passing any mocks that need to be verified in order\nInOrder inOrder = inOrder(firstMock, secondMock);\n\n//following will make sure that firstMock was called before secondMock\ninOrder.verify(firstMock).add("was called first");\ninOrder.verify(secondMock).add("was called second");\n\n// Oh, and A + B can be mixed together at will\n'})}),"\n",(0,t.jsx)(n.p,{children:"\u4e5f\u53ef\u4ee5\u9a8c\u8bc1\u4e00\u4e9b\u65b9\u6cd5\u4ece\u6765\u6ca1\u88ab\u8c03\u7528\u8fc7\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//using mocks - only mockOne is interacted\nmockOne.add("one");\n\n//ordinary verification\nverify(mockOne).add("one");\n\n//verify that method was never called on a mock\nverify(mockOne, never()).add("two");\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'//using mocks\nmockedList.add("one");\nmockedList.add("two");\n\nverify(mockedList).add("one");\n\n//following verification will fail\nverifyNoMoreInteractions(mockedList);\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u8b66\u544a\uff1a\u4e0d\u5efa\u8bae\u5728\u6bcf\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u4e2d\u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"verifyNoMoreInteractions"})," \u65b9\u6cd5\uff0c\u867d\u7136\u5b83\u662f\u4e00\u4e2a\u5f88\u65b9\u4fbf\u7684\u6d4b\u8bd5\u65ad\u8a00\uff0c\u4f46\u662f\u6ee5\u7528\u4f1a\u5bfc\u81f4\u8fc7\u5ea6\u6307\u5b9a\u548c\u96be\u4ee5\u7ef4\u62a4\uff0c\u5efa\u8bae\u53ea\u5728\u76f8\u5173\u7684\u65f6\u5019\u518d\u4f7f\u7528\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"\u8d85\u65f6\u9a8c\u8bc1",children:"\u8d85\u65f6\u9a8c\u8bc1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"//passes when someMethod() is called no later than within 100 ms\n//exits immediately when verification is satisfied (e.g. may not wait full 100 ms)\nverify(mock, timeout(100)).someMethod();\n//above is an alias to:\nverify(mock, timeout(100).times(1)).someMethod();\n\n//passes as soon as someMethod() has been called 2 times under 100 ms\nverify(mock, timeout(100).times(2)).someMethod();\n\n//equivalent: this also passes as soon as someMethod() has been called 2 times under 100 ms\nverify(mock, timeout(100).atLeast(2)).someMethod();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"\u9759\u6001\u65b9\u6cd5\u7684-mocking",children:"\u9759\u6001\u65b9\u6cd5\u7684 Mocking"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'assertEquals("foo", Foo.method());\ntry (MockedStatic mocked = mockStatic(Foo.class)) {\n    mocked.when(Foo::method).thenReturn("bar");\n    assertEquals("bar", Foo.method());\n    mocked.verify(Foo::method);\n}\nassertEquals("foo", Foo.method());\n'})}),"\n",(0,t.jsx)(n.h3,{id:"\u5bf9\u8c61\u6784\u9020\u7684-mocking",children:"\u5bf9\u8c61\u6784\u9020\u7684 Mocking"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'assertEquals("foo", new Foo().method());\ntry (MockedConstruction mocked = mockConstruction(Foo.class)) {\n    Foo foo = new Foo();\n    when(foo.method()).thenReturn("bar");\n    assertEquals("bar", foo.method());\n    verify(foo).method();\n}\nassertEquals("foo", new Foo().method());\n'})}),"\n",(0,t.jsx)(n.h2,{id:"spying",children:"Spying"}),"\n",(0,t.jsx)(n.h3,{id:"spying-\u771f\u5b9e\u5bf9\u8c61",children:"Spying \u771f\u5b9e\u5bf9\u8c61"}),"\n",(0,t.jsx)(n.p,{children:"\u53ef\u4ee5\u521b\u5efa\u771f\u5b9e\u5bf9\u8c61\u7684\u95f4\u8c0d\uff0c\u6ca1\u88ab\u63d2\u6869\u7684\u51fd\u6570\u5c06\u8c03\u7528\u5b9e\u9645\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u95f4\u8c0d\u7684\u542b\u4e49\u53ef\u4ee5\u7406\u89e3\u4e3a\u90e8\u5206 Mocking \uff0c\u5b83\u6838\u5fc3\u7684\u70b9\u662f\u5bf9\u771f\u5b9e\u5bf9\u8c61\u7684\u5305\u88c5\u3002"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:'List list = new LinkedList();\nList spy = spy(list);\n\n//optionally, you can stub out some methods:\nwhen(spy.size()).thenReturn(100);\n\n//using the spy calls *real* methods\nspy.add("one");\nspy.add("two");\n\n//prints "one" - the first element of a list\nSystem.out.println(spy.get(0));\n\n//size() method was stubbed - 100 is printed\nSystem.out.println(spy.size());\n\n//optionally, you can verify\nverify(spy).add("one");\nverify(spy).add("two");\n\n//Impossible: real method is called so spy.get(0) throws IndexOutOfBoundsException (the list is yet empty)\nwhen(spy.get(0)).thenReturn("foo");\n\n//You have to use doReturn() for stubbing\ndoReturn("foo").when(spy).get(0);\n'})}),"\n",(0,t.jsx)(n.h2,{id:"\u9ad8\u7ea7\u7528\u6cd5",children:"\u9ad8\u7ea7\u7528\u6cd5"}),"\n",(0,t.jsx)(n.h3,{id:"\u6ce8\u89e3\u7b80\u5316",children:"\u6ce8\u89e3\u7b80\u5316"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"@Mock"})," \u6ce8\u89e3\u53ef\u4ee5\u51cf\u5c11 Mock \u5bf9\u8c61\u7684\u4ee3\u7801\u91cf\uff0c\u8ba9\u6d4b\u8bd5\u7c7b\u66f4\u52a0\u53ef\u8bfb\uff0c\u9a8c\u8bc1\u9519\u8bef\u66f4\u52a0\u53ef\u8bfb\u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"public class ArticleManagerTest {\n    @Mock private ArticleCalculator calculator;\n    @Mock private ArticleDatabase database;\n    @Mock private UserProvider userProvider;\n    private ArticleManager manager;\n\n    @org.junit.jupiter.api.Test\n    void testSomethingInJunit5(@Mock ArticleDatabase database) {\n        // do something\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["\u5f88\u91cd\u8981\u7684\u662f\uff0c\u4f60\u9700\u8981\u5728\u57fa\u7c7b\u6216\u6d4b\u8bd5\u8fd0\u884c\u5668\u4e2d\u5f00\u542f ",(0,t.jsx)(n.code,{children:"Mockito"})," \u6ce8\u89e3\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u5185\u5efa\u7684\u8fd0\u884c\u5668 ",(0,t.jsx)(n.code,{children:"MockitoJUnitRunner"})," \u6216\u8005\u4e00\u4e2a\u89c4\u5219 ",(0,t.jsx)(n.code,{children:"MockitoRule"})," \u3002\u66f4\u591a\u5730\uff0c\u53ef\u4ee5\u53c2\u8003 ",(0,t.jsx)(n.a,{href:"https://javadoc.io/static/org.mockito/mockito-core/5.3.1/org/mockito/MockitoAnnotations.html",children:(0,t.jsx)(n.code,{children:"MockitoAnnotations"})})," \u3002"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-java",children:"MockitoAnnotations.openMocks(testClass);\n"})}),"\n",(0,t.jsx)(n.h1,{id:"powermock",children:"PowerMock"}),"\n",(0,t.jsx)(n.h1,{id:"\u53c2\u8003\u8d44\u6599",children:"\u53c2\u8003\u8d44\u6599"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://site.mockito.org/",children:"Mockito\u5b98\u7f51"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/mockito/mockito",children:"GitHub - mockito"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://javadoc.io/static/org.mockito/mockito-core/5.3.1/org/mockito/Mockito.html",children:"Mockito Java Docs"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>r});var t=o(96540);const i={},s=t.createContext(i);function c(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);